# ==================== 邮箱服务配置 ====================

# 邮箱服务类型
# moemail: 使用 MoeMail 服务
# skymail: 使用 Skymail 服务
# auto: 自动从可用服务中随机选择（推荐）
EMAIL_SERVICE=moemail

# MoeMail 配置（默认）
# 项目地址: https://github.com/beilunyang/moemail
MOEMAIL_URL=https://email.959585.xyz
MOEMAIL_API_KEY=your_api_key_here

# Skymail (Cloud Mail) 配置（备用）
# 项目地址: https://github.com/eoao/cloud-mail
# Token 获取方法: https://doc.skymail.ink/api/api-doc.html#生成token
SKYMAIL_URL=https://cloudmail.qixc.pp.ua
SKYMAIL_TOKEN=your_token_here
# 邮箱域名（支持多个域名，用逗号分隔，随机选择）
SKYMAIL_DOMAIN=example.com,domain2.com,domain3.com
# 通配符模式：无需注册邮箱即可接收邮件（推荐启用）
SKYMAIL_WILDCARD=false

# Firebase API Key
FIREBASE_API_KEY=AIzaSyBdy3O3S9hrdayLJxJ7mriBR4qgUaUygAs

# Warp 登录页面 URL
WARP_LOGIN_URL=https://app.warp.dev/login

# 浏览器配置
HEADLESS=false

# ==================== 浏览器指纹配置 ====================

# 是否启用指纹随机化（总开关）
# false: 关闭所有指纹随机化
# true: 启用指纹随机化（具体级别由 FINGERPRINT_LEVEL 控制）
FINGERPRINT_RANDOMIZE=true

# 指纹增强级别（仅在 FINGERPRINT_RANDOMIZE=true 时生效）
# basic: 基础随机化（原有功能，成功率 80-95%）
# balanced: 平衡模式（推荐，成功率 90-98%）⭐
# aggressive: 激进模式（追求极致，成功率 92-99%）
FINGERPRINT_LEVEL=balanced

# 是否使用增强的浏览器配置文件（推荐开启）
ENHANCED_PROFILES_ENABLED=true

# 是否启用严格的配置一致性检查（推荐开启）
STRICT_CONSISTENCY_CHECK=true

# 调试模式：打印详细的指纹信息（首次使用建议开启）
FINGERPRINT_DEBUG=false

# 指纹级别说明：
# - basic: 基础随机化
#   * Canvas 指纹混淆
#   * Navigator 属性覆盖
#   * Timezone 随机化
#   * 成功率: 80-95%
#
# - balanced: 平衡模式（推荐）⭐
#   * 包含 basic 的所有功能
#   * + 增强的浏览器配置文件（确保一致性）
#   * + WebGL 指纹混淆（与配置文件匹配）
#   * + Performance Timing 注入（模拟真实加载）
#   * 成功率: 90-98%
#
# - aggressive: 激进模式
#   * 包含 balanced 的所有功能
#   * + Audio Context 指纹混淆
#   * 成功率: 92-99%
#   * 注意: 可能影响某些网站的音频功能

# Chrome 版本配置（可选）
# 本地测试时如果使用 Chrome 121，设置此项
# GitHub Actions 会自动检测，不需要设置
# CHROME_VERSION=121

# Chrome 和 ChromeDriver 自定义路径（可选）
# 如果不设置，将使用系统默认路径
# CHROME_BINARY_PATH=F:\360Downloads\chrome-win\chrome.exe
# CHROMEDRIVER_PATH=C:\Users\qyk\AppData\Roaming\undetected_chromedriver\undetected_chromedriver.exe

# 代理配置（可选）
# 注意：中国大陆用户推荐使用 TUN 模式，无需配置这些环境变量
# 
# HTTP_PROXY：处理 HTTP 协议的请求
# HTTPS_PROXY：处理 HTTPS 协议的请求（重要！Firebase API 使用 HTTPS）
# 建议两个都设置，使用相同的代理地址
#
# HTTP_PROXY=http://127.0.0.1:7890
# HTTPS_PROXY=http://127.0.0.1:7890
# NO_PROXY=localhost,127.0.0.1,::1  # 排除本地地址（重要！避免 ChromeDriver 连接失败）

# 超时设置
EMAIL_TIMEOUT=120
